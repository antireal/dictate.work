{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/lib/SimplexOctaves.js","webpack:///./src/scene/RandomMesh.js","webpack:///./src/lib/three/Pass.js","webpack:///./src/scene/shaders/gradient_mat.vert","webpack:///./src/scene/shaders/gradient_mat.frag","webpack:///./src/lib/three/ShaderPass.js","webpack:///./src/scene/PostProcessing.js","webpack:///./src/scene/shaders/fxaa.vert","webpack:///./src/scene/shaders/fxaa.frag","webpack:///./src/scene/shaders/pass.vert","webpack:///./src/scene/shaders/vignette.frag","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CannonDebugRenderer","scene","world","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","this","_meshes","_material","THREE","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","copy","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","type","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","background","backgroundAlpha","fov","near","far","options","resize","width","height","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","xrframe","orbitControls","up","fromArray","target","lookAt","step","cannonDebugRenderer","forEach","fn","passes","pass","isLastElement","renderToScreen","render","start","isRunning","setAnimationLoop","animate","stop","now","stats","begin","Math","min","maxDeltaTime","end","args","child","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","sortObjects","domElement","setClearColor","xr","enabled","maxPixelRatio","gl","getContext","performance","addEventListener","touchHandler","createTouches","filtered","isDragging","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","createOrbitControls","element","parent","distance","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","styles","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","url","texture","encoding","setTextureParams","loadImage","crossorigin","image","needsUpdate","initTexture","Error","opt","flipY","mapping","format","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","equirectangular","pmrem","pmremEquirectangular","size","highestPowerOfTwo","naturalHeight","renderTarget","outTexture","fromEquirectangularTexture","dispose","basePath","extension","urls","generateCubeUrls","replace","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","prefix","postfix","TypeError","_getQueued","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","loadingStart","pMap","logError","percent","concurrency","errors","filter","groupLog","GLTFLoader","err","fetch","then","response","json","loadEnvMap","arrayBuffer","text","groupCollapsed","groupEnd","SimplexOctaves","simplex","octaves","persistence","lacunarity","frequency","amplitude","totalAmplitude","noise2D","FullScreenQuad","DIRS","flip_dir","RandomMesh","webgl","simplex_octaves","seed","random","color_end","curve","draw_outline","rotate","directions","half_r","floor","uniforms","resolution","cursor_pos","vertexShader","fragmentShader","line","MeshLine","setGeometry","line_material","MeshLineMaterial","lineWidth","transparent","opacity","line_mesh","speed","regen_prob","noise","addScaledVector","distanceTo","regen","verticesNeedUpdate","noise2","rotation","e","needsSwap","clear","assign","writeBuffer","readBuffer","delta","maskActive","_mesh","Pass","shader","textureID","undefined","clone","defines","fsQuad","constructor","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","ShaderPass","PostProcessing","fxaa_pass","tDiffuse","vignette_pass","location","querySelector","visibility","SimplexNoise","assets","offsetHSL","dark_blue","setX","setY","setZ","grey","post","damping"],"mappings":"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","file":"app.5b5fd6a3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([199,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n  tmpVec0 = new CANNON.Vec3()\n  tmpVec1 = new CANNON.Vec3()\n  tmpVec2 = new CANNON.Vec3()\n  tmpQuat0 = new CANNON.Vec3()\n\n  constructor(scene, world) {\n    this.scene = scene\n    this.world = world\n\n    this._meshes = []\n\n    this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n    this._sphereGeometry = new THREE.SphereGeometry(1)\n    this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n    this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n    this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n  }\n\n  update() {\n    const { bodies } = this.world\n    const meshes = this._meshes\n    const shapeWorldPosition = this.tmpVec0\n    const shapeWorldQuaternion = this.tmpQuat0\n\n    let meshIndex = 0\n\n    for (let i = 0; i !== bodies.length; i++) {\n      const body = bodies[i]\n\n      for (let j = 0; j !== body.shapes.length; j++) {\n        const shape = body.shapes[j]\n\n        this._updateMesh(meshIndex, body, shape)\n\n        const mesh = meshes[meshIndex]\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n          // Get world quaternion\n          body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n          // Copy to meshes\n          mesh.position.copy(shapeWorldPosition)\n          mesh.quaternion.copy(shapeWorldQuaternion)\n\n          // Change the visiblity\n          if ('visible' in body) {\n            mesh.visible = body.visible\n          }\n        }\n\n        meshIndex += 1\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i]\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n    }\n\n    meshes.length = meshIndex\n  }\n\n  _updateMesh(index, body, shape) {\n    let mesh = this._meshes[index]\n    if (!this._typeMatch(mesh, shape)) {\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n      mesh = this._meshes[index] = this._createMesh(shape)\n    }\n    this._scaleMesh(mesh, shape)\n  }\n\n  _createMesh(shape) {\n    let mesh\n    const material = this._material\n\n    const geo = new THREE.Geometry()\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh = new THREE.Mesh(this._sphereGeometry, material)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh = new THREE.Mesh(this._boxGeometry, material)\n        break\n\n      case CANNON.Shape.types.PLANE:\n        mesh = new THREE.Mesh(this._planeGeometry, material)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        // Create mesh\n\n        // Add vertices\n        for (let i = 0; i < shape.vertices.length; i++) {\n          const v = shape.vertices[i]\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n        }\n\n        for (let i = 0; i < shape.faces.length; i++) {\n          const face = shape.faces[i]\n\n          // add triangles\n          const a = face[0]\n          for (let j = 1; j < face.length - 1; j++) {\n            const b = face[j]\n            const c = face[j + 1]\n            geo.faces.push(new THREE.Face3(a, b, c))\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        for (let i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n          geo.vertices.push(\n            new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n            new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n            new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n          )\n          const j = geo.vertices.length - 3\n          geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        for (let xi = 0; xi < shape.data.length - 1; xi++) {\n          for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (let k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0)\n              this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n              this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n              this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n              this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n              this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n              this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n              geo.vertices.push(\n                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n              )\n              const ii = geo.vertices.length - 3\n              geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n            }\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n      default:\n        break\n    }\n\n    if (mesh) {\n      this.scene.add(mesh)\n    }\n\n    return mesh\n  }\n\n  _typeMatch(mesh, shape) {\n    if (!mesh) {\n      return false\n    }\n    const geo = mesh.geometry\n    return (\n      (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n      (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n      (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n    )\n  }\n\n  _scaleMesh(mesh, shape) {\n    const { radius } = shape\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh.scale.set(radius, radius, radius)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh.scale.copy(shape.halfExtents)\n        mesh.scale.multiplyScalar(2)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        mesh.scale.set(1, 1, 1)\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        mesh.scale.copy(shape.scale)\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        mesh.scale.set(1, 1, 1)\n        break\n      default:\n        break\n    }\n  }\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport createOrbitControls from 'orbit-controls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport CannonDebugRenderer from './CannonDebugRenderer'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #lastTime\n  #width\n  #height\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    if (options.xr) {\n      this.renderer.xr.enabled = true\n    }\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.isDragging = false\n    this.touchHandler.on('start', (ev, pos) => {\n      this.isDragging = true\n      this.traverse('onPointerDown', ev, pos)\n    })\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => {\n      this.isDragging = false\n      this.traverse('onPointerUp', ev, pos)\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.orbitControls = createOrbitControls({\n        element: this.canvas,\n        parent: window,\n        distance: 5,\n        ...(options.orbitControls instanceof Object ? options.orbitControls : {}),\n      })\n\n      // move the camera position accordingly to the orbitcontrols options\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.camera.lookAt(new THREE.Vector3().fromArray(this.orbitControls.target))\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugRenderer = new CannonDebugRenderer(this.scene, this.world)\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      const controlsState = State(options.controls)\n      this.controls = options.hideControls\n        ? controlsState\n        : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n      // add the custom controls-gui styles\n      if (!options.hideControls) {\n        const styles = `\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n            content: initial !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n            text-indent: 6px !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n            content: initial !important;\n          }\n        `\n        const style = document.createElement('style')\n        style.type = 'text/css'\n        style.innerHTML = styles\n        document.head.appendChild(style)\n      }\n    }\n\n    // detect the gpu info\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\n    this.gpu = {\n      name: gpu.type,\n      tier: Number(gpu.tier.slice(-1)),\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\n    }\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse((obj) => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time, xrframe) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      this.camera.up.fromArray(this.orbitControls.up)\n      this.camera.position.fromArray(this.orbitControls.position)\n      this.#tmpTarget.fromArray(this.orbitControls.target)\n      this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse((obj) => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time, xrframe)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(1 / 60, dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugRenderer) {\n        this.cannonDebugRenderer.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach((body) => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  offUpdate(fn) {\n    const index = this.#updateListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#updateListeners.splice(index, 1)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.isRunning) return\n    this.renderer.setAnimationLoop(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (!this.isRunning) return\n    this.renderer.setAnimationLoop(null)\n    this.isRunning = false\n    return this\n  }\n\n  animate = (now, xrframe) => {\n    if (!this.isRunning) return\n\n    if (this.stats) this.stats.begin()\n\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time, xrframe)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse((child) => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    if (options.pmrem) {\n      return pmremEquirectangular(texture, renderer)\n    } else {\n      const size = highestPowerOfTwo(texture.image.naturalHeight)\n      const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n        generateMipmaps: true,\n        minFilter: THREE.LinearMipmapLinearFilter,\n        magFilter: THREE.LinearFilter,\n      })\n\n      const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture)\n\n      texture.dispose() // dispose original texture\n      texture.image.data = null // remove image reference\n\n      return outTexture\n    }\n  }\n\n  const basePath = url\n  const extension = options.extension || '.jpg'\n  const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (extension === '.hdr') {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n        null,\n        () => reject(new Error(`Could not load env map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n      null,\n      () => reject(new Error(`Could not load env map: ${basePath}`))\n    )\n  })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n  if (options.encoding) {\n    cubeMap.encoding = options.encoding\n  }\n  if (options.format) {\n    cubeMap.format = options.format\n  }\n  if (options.pmrem) {\n    cubeMap = pmremCubemap(cubeMap, options.renderer)\n  }\n  return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n  const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  cubeMap.dispose() // dispose original texture\n  cubeMap.image.data = null // remove image reference\n\n  return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (url) => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, (err) =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","const SimplexOctaves = simplex => (\r\n  x,\r\n  y,\r\n  octaves = 3,\r\n  persistence = 0.5,\r\n  lacunarity = 2.0\r\n) => {\r\n  let total = 0;\r\n  let frequency = 1;\r\n  let amplitude = 1;\r\n  let totalAmplitude = 0; // Used for normalizing result between 0.0 and 1.0\r\n\r\n  for (let i = 0; i < octaves; i++) {\r\n    total += simplex.noise2D(x * frequency, y * frequency) * amplitude;\r\n\r\n    totalAmplitude += amplitude;\r\n    amplitude *= persistence;\r\n    frequency *= lacunarity;\r\n  }\r\n\r\n  return total / totalAmplitude;\r\n};\r\n\r\nexport default SimplexOctaves;\r\n","import * as THREE from \"three\";\r\n\r\nimport gradient_mat_frag from \"./shaders/gradient_mat.frag\";\r\nimport gradient_mat_vert from \"./shaders/gradient_mat.vert\";\r\n\r\nimport { MeshLine, MeshLineMaterial } from \"three.meshline\";\r\n\r\nimport SimplexOctaves from \"../lib/SimplexOctaves\";\r\n\r\nconst DIRS = [\r\n  new THREE.Vector3(0, 0, -1), //   NORTH\r\n  new THREE.Vector3(0, 0, 1), //    SOUTH\r\n  new THREE.Vector3(1, 0, 0), //    EAST\r\n  new THREE.Vector3(-1, 0, 0), //   WEST\r\n  new THREE.Vector3(0, 1, 0), //    ZENITH\r\n  new THREE.Vector3(0, -1, 0), //   NADIR\r\n];\r\n\r\nconst flip_dir = i => (i % 2 ? i - 1 : i + 1);\r\n\r\nexport default class RandomMesh extends THREE.Group {\r\n  constructor(webgl, simplex, options) {\r\n    super(options);\r\n    // these can be used also in other methods\r\n    this.webgl = webgl;\r\n    this.options = options;\r\n    this.simplex_octaves = SimplexOctaves(simplex);\r\n    this.seed = Math.random() * 25565;\r\n\r\n    const {\r\n      color,\r\n      color_end,\r\n      curve,\r\n      radius,\r\n      faces,\r\n      draw_outline = false,\r\n      rotate = true,\r\n    } = this.options;\r\n\r\n    const directions = [];\r\n    this.directions = directions;\r\n\r\n    const half_r = radius / 2;\r\n    const geometry = new THREE.Geometry();\r\n    for (let i = 0; i < faces * 3; i++) {\r\n      for (let v = 0; v < 3; v++) {\r\n        geometry.vertices.push(\r\n          new THREE.Vector3(\r\n            Math.random() * radius - half_r,\r\n            Math.random() * radius - half_r,\r\n            Math.random() * radius - half_r\r\n          )\r\n        );\r\n        this.directions.push(Math.floor(Math.random() * 6));\r\n      }\r\n      geometry.faces.push(new THREE.Face3(i, i + 1, i + 2));\r\n    }\r\n    geometry.computeBoundingSphere();\r\n\r\n    const material = new THREE.ShaderMaterial({\r\n      uniforms: {\r\n        resolution: { value: new THREE.Vector2() },\r\n        color: { value: color },\r\n        color_end: { value: color_end || color },\r\n        curve: { value: curve || 1 },\r\n        cursor_pos: { value: new THREE.Vector2() },\r\n      },\r\n      vertexShader: gradient_mat_vert,\r\n      fragmentShader: gradient_mat_frag,\r\n    });\r\n    this.material = material;\r\n    material.uniforms.resolution.value.set(\r\n      webgl.width * webgl.pixelRatio,\r\n      webgl.height * webgl.pixelRatio\r\n    );\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material);\r\n    this.add(this.mesh);\r\n\r\n    if (draw_outline) {\r\n      this.line = new MeshLine();\r\n      this.line.setGeometry(geometry);\r\n      this.line_material = new MeshLineMaterial({\r\n        lineWidth: 0.01,\r\n        color: new THREE.Color(color),\r\n        // sizeAttenuation: 0,\r\n        transparent: true,\r\n        opacity: 0.5,\r\n      });\r\n      const line_mesh = new THREE.Mesh(this.line, this.line_material);\r\n\r\n      this.add(line_mesh);\r\n    }\r\n  }\r\n\r\n  regen() {\r\n    let { radius } = this.options;\r\n\r\n    radius *= 0.5 + (Math.random() - 0.5);\r\n    const half_r = radius / 2;\r\n\r\n    for (let i = 0; i < this.mesh.geometry.vertices.length; i++) {\r\n      const v = this.mesh.geometry.vertices[i];\r\n      v.set(\r\n        Math.random() * radius - half_r,\r\n        Math.random() * radius - half_r,\r\n        Math.random() * radius - half_r\r\n      );\r\n    }\r\n  }\r\n\r\n  update(dt, time) {\r\n    const {\r\n      radius,\r\n      speed,\r\n      regen_prob,\r\n      draw_outline = false,\r\n      rotate = true,\r\n    } = this.options;\r\n    const noise = 0.25 + (1 + this.simplex_octaves(time, this.seed)) / 3;\r\n\r\n    for (let i = 0; i < this.mesh.geometry.vertices.length; i++) {\r\n      const v = this.mesh.geometry.vertices[i];\r\n      v.addScaledVector(DIRS[this.directions[i]], noise * speed * dt * 100);\r\n      if (v.distanceTo(new THREE.Vector3(0, 0, 0)) >= radius / 2) {\r\n        this.directions[i] = flip_dir(this.directions[i]);\r\n      }\r\n    }\r\n    if (Math.random() < regen_prob) this.regen();\r\n\r\n    this.mesh.geometry.verticesNeedUpdate = true;\r\n    if (draw_outline) {\r\n      const noise2 = this.simplex_octaves(time * 1, this.seed + 54905);\r\n      if (noise2 > 0.4) this.line_material.opacity = noise2;\r\n      else this.line_material.opacity = 0;\r\n\r\n      this.line.setGeometry(this.mesh.geometry);\r\n    }\r\n\r\n    if (rotate) this.mesh.rotation.y += dt * 1 * speed;\r\n  }\r\n\r\n  onPointerMove(e, [x, y]) {\r\n    this.material.uniforms.cursor_pos.value.set(\r\n      x / this.webgl.width,\r\n      y / this.webgl.width\r\n    );\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nTHREE.Pass = function () {\r\n  // if set to true, the pass is processed by the composer\r\n  this.enabled = true;\r\n\r\n  // if set to true, the pass indicates to swap read and write buffer after rendering\r\n  this.needsSwap = true;\r\n\r\n  // if set to true, the pass clears its buffer before rendering\r\n  this.clear = false;\r\n\r\n  // if set to true, the result of the pass is rendered to screen\r\n  this.renderToScreen = false;\r\n};\r\n\r\nObject.assign(THREE.Pass.prototype, {\r\n  setSize: function (width, height) {},\r\n\r\n  render: function (renderer, writeBuffer, readBuffer, delta, maskActive) {\r\n    console.error(\"THREE.Pass: .render() must be implemented in derived pass.\");\r\n  },\r\n});\r\n\r\n// Helper for passes that need to fill the viewport with a single quad.\r\nTHREE.Pass.FullScreenQuad = (function () {\r\n  var camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\r\n  var geometry = new THREE.PlaneBufferGeometry(2, 2);\r\n\r\n  var FullScreenQuad = function (material) {\r\n    this._mesh = new THREE.Mesh(geometry, material);\r\n  };\r\n\r\n  Object.defineProperty(FullScreenQuad.prototype, \"material\", {\r\n    get: function () {\r\n      return this._mesh.material;\r\n    },\r\n\r\n    set: function (value) {\r\n      this._mesh.material = value;\r\n    },\r\n  });\r\n\r\n  Object.assign(FullScreenQuad.prototype, {\r\n    render: function (renderer) {\r\n      renderer.render(this._mesh, camera);\r\n    },\r\n  });\r\n\r\n  return FullScreenQuad;\r\n})();\r\n\r\nexport const Pass = THREE.Pass;\r\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\";","export default \"#define GLSLIFY 1\\nuniform vec2 resolution;\\nuniform vec3 color;\\nuniform vec3 color_end;\\nuniform float curve;\\n\\nuniform vec2 cursor_pos;\\n\\nvoid main() {\\n  vec2 st = gl_FragCoord.xy / resolution.xy;\\n\\n  float mix_value = mix(distance(st, cursor_pos * vec2(1., -1.)),\\n                        distance(st, vec2(0., 0.)), 0.5);\\n  vec3 grad = mix(color_end, color, pow(mix_value, curve));\\n\\n  gl_FragColor = vec4(grad, 1.0);\\n}\";","import * as THREE from \"three\";\r\nimport { Pass } from \"./Pass\";\r\nTHREE.Pass = Pass;\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShaderPass = function (shader, textureID) {\r\n  THREE.Pass.call(this);\r\n\r\n  this.textureID = textureID !== undefined ? textureID : \"tDiffuse\";\r\n\r\n  if (shader instanceof THREE.ShaderMaterial) {\r\n    this.uniforms = shader.uniforms;\r\n\r\n    this.material = shader;\r\n  } else if (shader) {\r\n    this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\r\n\r\n    this.material = new THREE.ShaderMaterial({\r\n      defines: Object.assign({}, shader.defines),\r\n      uniforms: this.uniforms,\r\n      vertexShader: shader.vertexShader,\r\n      fragmentShader: shader.fragmentShader,\r\n    });\r\n  }\r\n\r\n  this.fsQuad = new THREE.Pass.FullScreenQuad(this.material);\r\n};\r\n\r\nTHREE.ShaderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {\r\n  constructor: THREE.ShaderPass,\r\n\r\n  render: function (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\r\n    if (this.uniforms[this.textureID]) {\r\n      this.uniforms[this.textureID].value = readBuffer.texture;\r\n    }\r\n\r\n    this.fsQuad.material = this.material;\r\n\r\n    if (this.renderToScreen) {\r\n      renderer.setRenderTarget(null);\r\n      this.fsQuad.render(renderer);\r\n    } else {\r\n      renderer.setRenderTarget(writeBuffer);\r\n      // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\r\n      if (this.clear)\r\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\r\n      this.fsQuad.render(renderer);\r\n    }\r\n  },\r\n});\r\n\r\nexport const ShaderPass = THREE.ShaderPass;\r\n","import * as THREE from \"three\";\r\n\r\nimport { ShaderPass } from \"../lib/three/ShaderPass\";\r\nimport fxaa_frag from \"./shaders/fxaa.frag\";\r\nimport fxaa_vert from \"./shaders/fxaa.vert\";\r\n\r\n// import bloom_frag from \"./shaders/bloom.frag\";\r\nimport pass_vert from \"./shaders/pass.vert\";\r\n\r\nimport vignette_frag from \"./shaders/vignette.frag\";\r\n\r\nexport default class PostProcessing {\r\n  constructor(webgl, options) {\r\n    const fxaa_pass = new ShaderPass({\r\n      vertexShader: fxaa_vert,\r\n      fragmentShader: fxaa_frag,\r\n      uniforms: {\r\n        tDiffuse: { type: \"t\", value: new THREE.Texture() },\r\n        resolution: { type: \"v2\", value: new THREE.Vector2() },\r\n      },\r\n    });\r\n    this.fxaa_pass = fxaa_pass;\r\n    this.fxaa_pass.uniforms.resolution.value.set(\r\n      webgl.width * webgl.pixelRatio,\r\n      webgl.height * webgl.pixelRatio\r\n    );\r\n    webgl.composer.addPass(this.fxaa_pass);\r\n\r\n    const vignette_pass = new ShaderPass({\r\n      vertexShader: pass_vert,\r\n      fragmentShader: vignette_frag,\r\n      uniforms: {\r\n        tDiffuse: { type: \"t\", value: new THREE.Texture() },\r\n      },\r\n    });\r\n    this.vignette_pass = vignette_pass;\r\n    webgl.composer.addPass(this.vignette_pass);\r\n  }\r\n\r\n  resize(width, height, pixelRatio) {\r\n    this.fxaa_pass.uniforms.resolution.value.set(\r\n      webgl.width * webgl.pixelRatio,\r\n      webgl.height * webgl.pixelRatio\r\n    );\r\n    console.log(\"updated uniforms\");\r\n  }\r\n}\r\n","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\";","export default \"#define GLSLIFY 1\\n// clang-format off\\nvarying vec2 vUv;\\n\\n// texcoords computed in vertex step\\n// to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n// make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it's\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n\\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;\\n  gl_FragColor = fxaa(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE,\\n                      v_rgbSW, v_rgbSE, v_rgbM);\\n}\";","export default \"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vUv = uv;\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\";","export default \"#define GLSLIFY 1\\n// clang-format off\\nfloat vignette(vec2 uv, float radius, float smoothness) {\\n\\tfloat diff = radius - distance(uv, vec2(0.5, 0.5));\\n\\treturn smoothstep(-smoothness, smoothness, diff);\\n}\\n\\nuniform sampler2D tDiffuse;\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec4 texColor = texture2D(tDiffuse, vUv);\\n\\n  float vignetteValue = vignette(vUv, 0.8, 0.4);\\n  texColor.rgb *= vignetteValue;\\n\\n  gl_FragColor = texColor;\\n}\";","import * as THREE from \"three\";\nimport WebGLApp from \"./lib/WebGLApp\";\nimport assets from \"./lib/AssetManager\";\nimport RandomMesh from \"./scene/RandomMesh\";\n\nimport SimplexNoise from \"simplex-noise\";\n\nimport PostProcessing from \"./scene/PostProcessing\";\n\nwindow.DEBUG = window.location.search.includes(\"debug\");\n\n// grab our canvas\nconst canvas = document.querySelector(\"#app\");\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  // enable transparency\n  alpha: true,\n  // set the scene background color\n  background: \"#0a0d30\",\n  backgroundAlpha: 1,\n  postprocessing: true,\n  // show the fps counter from stats.js\n  showFps: window.DEBUG,\n  orbitControls: window.DEBUG && { distance: 7 },\n});\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl;\n}\n\n// hide canvas\nwebgl.canvas.style.visibility = \"hidden\";\n\nconst simplex = new SimplexNoise();\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(() => {\n  // show canvas\n  webgl.canvas.style.visibility = \"\";\n\n  // move the camera behind,\n  // this will be considered only if orbitControls are disabled\n  webgl.camera.position.set(0, 0, 5);\n\n  // light blue\n  webgl.scene.add(\n    new RandomMesh(webgl, simplex, {\n      color: new THREE.Color(0x7fffee),\n      color_end: new THREE.Color(0x38dce8).offsetHSL(0.05, 0.1, -0.1),\n      radius: 6,\n      faces: 4,\n      speed: 0.01,\n      regen_prob: 0.007,\n      draw_outline: true,\n    })\n  );\n\n  // dark blue\n  const dark_blue = new RandomMesh(webgl, simplex, {\n    color: new THREE.Color(0x0a0d30),\n    color_end: new THREE.Color(0x0e1275),\n    radius: 8,\n    faces: 4,\n    speed: 0.0005,\n    regen_prob: 0.0001,\n    rotate: false,\n  });\n  dark_blue.scale.setX(4);\n  dark_blue.scale.setY(4);\n  dark_blue.position.setZ(-1);\n  webgl.scene.add(dark_blue);\n\n  // red\n  webgl.scene.add(\n    new RandomMesh(webgl, simplex, {\n      color: new THREE.Color(0xce1d37),\n      color_end: new THREE.Color(0xce1d37).offsetHSL(-0.1, 0.1, -0.1),\n      radius: 10,\n      faces: 3,\n      speed: 0.006,\n      regen_prob: 0.0001,\n      // draw_outline: true,\n    })\n  );\n\n  const grey = new RandomMesh(webgl, simplex, {\n    color: new THREE.Color(0xc6c7f5),\n    color_end: new THREE.Color(0x443c75),\n    curve: 1,\n    radius: 8,\n    faces: 1,\n    speed: 0.012,\n    regen_prob: 0.02,\n    draw_outline: true,\n  });\n  webgl.scene.add(grey);\n\n  const post = new PostProcessing(webgl, {});\n  webgl.post = post;\n\n  // start animation loop\n  webgl.start();\n  webgl.draw();\n  webgl.orbitControls.damping = 0.1;\n});\n"],"sourceRoot":""}